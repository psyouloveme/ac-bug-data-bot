{"mappings":"gCAAMA,qBCsBiB,SAAUC,EAAQC,GACxC,MAAMC,EAAeF,EAAOG,UAAU,iBAEtCD,EAAaE,OAAQ,EAErBJ,EAAOK,IAAIC,KAAK,gCAEhBN,EAAOO,UAAU,eAAgB,mBAAmB,EAACC,KAACA,EAAIC,QAAEA,MAC3D,IAAKD,IAASC,IAAYA,EAAQC,WAAW,SAC5C,OAGD,MAAMC,EAAUF,EAAQG,MAAM,KAAKC,MAAM,GAAGC,KAAK,KAAKC,cAChDC,EAAchB,EAAOG,UAAU,iBACrC,IAAIc,EAAY,KAIhB,GAFAjB,EAAOK,IAAIC,KAAK,0BAA2BU,EAAYZ,OAGjD,wBADEY,EAAYZ,MAElBa,EAAY,yBAIZA,EAAY,cAITA,IAILjB,EAAOK,IAAIC,KAAK,kBAAmBW,GAEnChB,EAAUgB,GACRC,MACA,OACA,YACA,OACA,OACA,WACA,QACA,QAEAC,MAAM,OAAQR,GACdS,MAAKC,IACDA,EApER,SAAqBrB,EAAQsB,GAC5B,GAAKA,GAIDA,EAAK,CACR,IAAIC,EAAS,GAAGD,EAAIE,mBAAmBF,EAAIG,YAAYH,EAAII,cAAcJ,EAAIK,QACzEL,EAAII,YAAcJ,EAAIM,OACzBL,GAAU,aAAaD,EAAIM,SAG5BL,GAAU,IAAID,EAAIO,mCACdP,EAAIQ,KACPP,GAAU,IAEVA,GAAU,oBAGXvB,EAAO+B,oBAAoB,kBAAmB,kBAAmBR,IAmD9DS,CAAYhC,EAAQqB,GAEpBrB,EAAOK,IAAIC,KAAK,gBAAiBK,MAGlCsB,OAAMC,IACNlC,EAAOK,IAAI8B,MAAMD,UAIpBlC,EAAOK,IAAIC,KAAK,qCAChBJ,EAAaE,OAAQ,GDtEtBgC,OAAAC,QAAiB,SAAUrC,GAC1BA,EAAOK,IAAIC,KAAK,4CAChBN,EAAOG,UAAU,gBAAiB,CACjCmC,cAAc,IAEftC,EAAOG,UAAU,gBAAiB,CACjCmC,aAAc,SAGf,MAAMC,EAAQC,EAAexC,EAAQ,OAErCuC,EAAME,aAAYC,MAAMzC,IACvB0C,EAAa3C,EAAQC,MAGtBsC,EAAMK,eAAcF,SAtBrB,SAAyB1C,GACxBA,EAAOK,IAAIC,KAAK,kDACKN,EAAOG,UAAU,iBACzBC,OAAQ,EACrBJ,EAAOK,IAAIC,KAAK,uDAkBgBuC,CAAgB7C","sources":["src/extension/index.js","src/extension/bugDataSetup.js"],"sourcesContent":["const {requireService} = require('nodecg-io-core');\nconst {setupBugData} = require('./bugDataSetup');\n\nfunction teardownBugData(nodecg) {\n\tnodecg.log.info('Tearing down Animal Crossing Bug Data service.');\n\tconst bugDataReady = nodecg.Replicant('databaseReady');\n\tbugDataReady.value = false;\n\tnodecg.log.info('Done tearing down Animal Crossing Bug Data service.');\n}\n\nmodule.exports = function (nodecg) {\n\tnodecg.log.info('Animal Crossing Bug Data bundle started.');\n\tnodecg.Replicant('databaseReady', {\n\t\tdefaultValue: false\n\t});\n\tnodecg.Replicant('acGameVersion', {\n\t\tdefaultValue: 'none'\n\t});\n\n\tconst bugDb = requireService(nodecg, 'sql');\n\n\tbugDb.onAvailable(async sqlClient => {\n\t\tsetupBugData(nodecg, sqlClient);\n\t});\n\n\tbugDb.onUnavailable(async () => teardownBugData(nodecg));\n};\n","function bugCallback(nodecg, bug) {\n\tif (!bug) {\n\t\treturn;\n\t}\n\n\tif (bug) {\n\t\tlet outMsg = `${bug.name}: available ${bug.location} ${bug.available}, ${bug.time}.`;\n\t\tif (bug.available !== bug.peak) {\n\t\t\toutMsg += ` peaks in ${bug.peak}.`;\n\t\t}\n\n\t\toutMsg += ` ${bug.spawn} spawn rate (in this route)`;\n\t\tif (bug.rain) {\n\t\t\toutMsg += '.';\n\t\t} else {\n\t\t\toutMsg += ' but not in rain.';\n\t\t}\n\n\t\tnodecg.sendMessageToBundle('SendChatMessage', 'twitch-listener', outMsg);\n\t}\n}\n\nexports.setupBugData = function (nodecg, sqlClient) {\n\tconst bugDataReady = nodecg.Replicant('databaseReady');\n\n\tbugDataReady.value = false;\n\n\tnodecg.log.info('Setting up Bug Data service.');\n\n\tnodecg.listenFor('ChatReceived', 'twitch-listener', ({user, message}) => {\n\t\tif (!user || !message || !message.startsWith('!bug ')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst bugName = message.split(' ').slice(1).join(' ').toLowerCase();\n\t\tconst gameVersion = nodecg.Replicant('acGameVersion');\n\t\tlet tablename = null;\n\n\t\tnodecg.log.info('looking up bug data for', gameVersion.value);\n\n\t\tswitch (gameVersion.value) {\n\t\t\tcase 'doubutsu-no-mori-e+':\n\t\t\t\ttablename = 'dnmeplus_bug_data';\n\t\t\t\tbreak;\n\t\t\tcase 'animal-crossing':\n\t\t\tdefault:\n\t\t\t\ttablename = 'ac_bug_data';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!tablename) {\n\t\t\treturn;\n\t\t}\n\n\t\tnodecg.log.info('using tablename', tablename);\n\n\t\tsqlClient(tablename)\n\t\t\t.first(\n\t\t\t\t'name',\n\t\t\t\t'available',\n\t\t\t\t'peak',\n\t\t\t\t'time',\n\t\t\t\t'location',\n\t\t\t\t'spawn',\n\t\t\t\t'rain'\n\t\t\t)\n\t\t\t.where('name', bugName)\n\t\t\t.then(row => {\n\t\t\t\tif (row) {\n\t\t\t\t\tbugCallback(nodecg, row);\n\t\t\t\t} else {\n\t\t\t\t\tnodecg.log.info('no bug found,', bugName);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tnodecg.log.error(err);\n\t\t\t});\n\t});\n\n\tnodecg.log.info('Done setting up Bug Data service.');\n\tbugDataReady.value = true;\n};\n"],"names":["requireService","nodecg","sqlClient","bugDataReady","Replicant","value","log","info","listenFor","user","message","startsWith","bugName","split","slice","join","toLowerCase","gameVersion","tablename","first","where","then","row","bug","outMsg","name","location","available","time","peak","spawn","rain","sendMessageToBundle","$855d6e41e8cbc810$var$bugCallback","catch","err","error","module","exports","defaultValue","bugDb","$57621f5187ddf231$require$requireService","onAvailable","async","$57621f5187ddf231$require$setupBugData","onUnavailable","$57621f5187ddf231$var$teardownBugData"],"version":3,"file":"index.js.map","sourceRoot":"../"}